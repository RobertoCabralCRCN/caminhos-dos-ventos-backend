import { Injectable, CanActivate, ExecutionContext, ForbiddenException } from "@nestjs/common";
import { Reflector } from "@nestjs/core";

@Injectable()
export class SuperUserGuard implements CanActivate {
  constructor(private reflector: Reflector) {}

  canActivate(context: ExecutionContext): boolean {
    const request = context.switchToHttp().getRequest();
    const user = request.user;

    console.log("üîê SUPER USER GUARD - Verificando permiss√µes");
    console.log("üë§ Usu√°rio:", user?.email);
    console.log("üîë Super User:", user?.superUser);

    if (!user) {
      console.log("‚ùå Usu√°rio n√£o autenticado");
      throw new ForbiddenException("Usu√°rio n√£o autenticado");
    }

    if (!user.superUser) {
      console.log("‚ùå Usu√°rio n√£o √© super user");
      throw new ForbiddenException("Apenas super usu√°rios podem realizar esta a√ß√£o");
    }

    if (!user.isActive) {
      console.log("‚ùå Usu√°rio inativo");
      throw new ForbiddenException("Usu√°rio inativo");
    }

    console.log("‚úÖ Usu√°rio autorizado como super user");
    return true;
  }
}



