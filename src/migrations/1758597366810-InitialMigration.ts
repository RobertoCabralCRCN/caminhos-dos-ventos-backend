import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialMigration1758597366810 implements MigrationInterface {
    name = 'InitialMigration1758597366810'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "imagem"`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "emoji" character varying`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "estoque" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "estoqueMinimo" integer NOT NULL DEFAULT '5'`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "imagens" text array NOT NULL DEFAULT '{}'`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "tags" text array NOT NULL DEFAULT '{}'`);
        await queryRunner.query(`CREATE TYPE "public"."cliente_role_enum" AS ENUM('client', 'admin', 'super_admin')`);
        await queryRunner.query(`ALTER TABLE "cliente" ADD "role" "public"."cliente_role_enum" NOT NULL DEFAULT 'client'`);
        await queryRunner.query(`ALTER TABLE "cliente" ADD "ativo" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "cliente" ADD "dataCriacao" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "cliente" ADD "dataAtualizacao" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD "observacoes" character varying`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD "enderecoEntrega" character varying`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD "dataPagamento" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD "dataEntrega" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD "metodoPagamento" character varying`);
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "categoria"`);
        await queryRunner.query(`CREATE TYPE "public"."produto_categoria_enum" AS ENUM('velas', 'guias', 'brajas', 'defumadores')`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "categoria" "public"."produto_categoria_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "cliente" ALTER COLUMN "numero" DROP DEFAULT`);
        await queryRunner.query(`ALTER TYPE "public"."pedido_status_enum" RENAME TO "pedido_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."pedido_status_enum" AS ENUM('aguardando_pagamento', 'aguardando_producao', 'em_producao', 'pronto_entrega', 'entregue', 'cancelado')`);
        await queryRunner.query(`ALTER TABLE "pedido" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "pedido" ALTER COLUMN "status" TYPE "public"."pedido_status_enum" USING "status"::"text"::"public"."pedido_status_enum"`);
        await queryRunner.query(`ALTER TABLE "pedido" ALTER COLUMN "status" SET DEFAULT 'aguardando_pagamento'`);
        await queryRunner.query(`DROP TYPE "public"."pedido_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "pagamento" DROP COLUMN "metodo"`);
        await queryRunner.query(`CREATE TYPE "public"."pagamento_metodo_enum" AS ENUM('pix', 'credit', 'debit', 'boleto')`);
        await queryRunner.query(`ALTER TABLE "pagamento" ADD "metodo" "public"."pagamento_metodo_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "pagamento" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."pagamento_status_enum" AS ENUM('pending', 'paid', 'failed', 'refunded')`);
        await queryRunner.query(`ALTER TABLE "pagamento" ADD "status" "public"."pagamento_status_enum" NOT NULL DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE "notificacao" DROP COLUMN "tipo"`);
        await queryRunner.query(`CREATE TYPE "public"."notificacao_tipo_enum" AS ENUM('order_update', 'payment_confirmed', 'product_available', 'promotion')`);
        await queryRunner.query(`ALTER TABLE "notificacao" ADD "tipo" "public"."notificacao_tipo_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" DROP COLUMN "type"`);
        await queryRunner.query(`CREATE TYPE "public"."estoque_movimentacao_type_enum" AS ENUM('in', 'out', 'adjustment', 'transfer')`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" ADD "type" "public"."estoque_movimentacao_type_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" DROP COLUMN "reason"`);
        await queryRunner.query(`CREATE TYPE "public"."estoque_movimentacao_reason_enum" AS ENUM('purchase', 'sale', 'return', 'damage', 'inventory', 'adjustment', 'transfer', 'production', 'donation', 'loss')`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" ADD "reason" "public"."estoque_movimentacao_reason_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "estoque_item" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."estoque_item_status_enum" AS ENUM('in_stock', 'low_stock', 'out_of_stock', 'overstock')`);
        await queryRunner.query(`ALTER TABLE "estoque_item" ADD "status" "public"."estoque_item_status_enum" NOT NULL DEFAULT 'out_of_stock'`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" DROP COLUMN "tipo"`);
        await queryRunner.query(`CREATE TYPE "public"."estoque_alerta_tipo_enum" AS ENUM('low_stock', 'out_of_stock', 'overstock', 'expiring', 'expired')`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" ADD "tipo" "public"."estoque_alerta_tipo_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" DROP COLUMN "severidade"`);
        await queryRunner.query(`CREATE TYPE "public"."estoque_alerta_severidade_enum" AS ENUM('low', 'medium', 'high', 'critical')`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" ADD "severidade" "public"."estoque_alerta_severidade_enum" NOT NULL`);
        await queryRunner.query(`ALTER TABLE "configuracao" DROP COLUMN "categoria"`);
        await queryRunner.query(`CREATE TYPE "public"."configuracao_categoria_enum" AS ENUM('payment', 'delivery', 'general', 'theme')`);
        await queryRunner.query(`ALTER TABLE "configuracao" ADD "categoria" "public"."configuracao_categoria_enum" NOT NULL DEFAULT 'general'`);
        await queryRunner.query(`ALTER TABLE "pagamento" ADD CONSTRAINT "FK_2e58ea8831ba85eb9c87a29135b" FOREIGN KEY ("pedidoId") REFERENCES "pedido"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notificacao" ADD CONSTRAINT "FK_eb15c0e603eabc0cd09149ee50c" FOREIGN KEY ("clienteId") REFERENCES "cliente"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notificacao" ADD CONSTRAINT "FK_9c8299a8506675f2de0d6eb20e9" FOREIGN KEY ("usuarioId") REFERENCES "usuario"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" ADD CONSTRAINT "FK_b2bd30df84bcebb21022c5ffb3c" FOREIGN KEY ("produtoId") REFERENCES "produto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" ADD CONSTRAINT "FK_36188d7d441b50d4db345947eb3" FOREIGN KEY ("usuarioId") REFERENCES "usuario"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" ADD CONSTRAINT "FK_bf158df8d0da9827af9b2e786e4" FOREIGN KEY ("clienteId") REFERENCES "cliente"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "estoque_item" ADD CONSTRAINT "FK_b51b29296d405112cd2dc3b83a7" FOREIGN KEY ("produtoId") REFERENCES "produto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" ADD CONSTRAINT "FK_2be280f1086242365b890baa276" FOREIGN KEY ("produtoId") REFERENCES "produto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "avaliacao" ADD CONSTRAINT "FK_43405dea6e01ff66f0e92700fa5" FOREIGN KEY ("clienteId") REFERENCES "cliente"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "avaliacao" ADD CONSTRAINT "FK_d5245e3cdbc14b9f66f9094415f" FOREIGN KEY ("produtoId") REFERENCES "produto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "avaliacao" ADD CONSTRAINT "FK_4214a3f5161f7c6f97f76d1baf6" FOREIGN KEY ("pedidoId") REFERENCES "pedido"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "avaliacao" DROP CONSTRAINT "FK_4214a3f5161f7c6f97f76d1baf6"`);
        await queryRunner.query(`ALTER TABLE "avaliacao" DROP CONSTRAINT "FK_d5245e3cdbc14b9f66f9094415f"`);
        await queryRunner.query(`ALTER TABLE "avaliacao" DROP CONSTRAINT "FK_43405dea6e01ff66f0e92700fa5"`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" DROP CONSTRAINT "FK_2be280f1086242365b890baa276"`);
        await queryRunner.query(`ALTER TABLE "estoque_item" DROP CONSTRAINT "FK_b51b29296d405112cd2dc3b83a7"`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" DROP CONSTRAINT "FK_bf158df8d0da9827af9b2e786e4"`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" DROP CONSTRAINT "FK_36188d7d441b50d4db345947eb3"`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" DROP CONSTRAINT "FK_b2bd30df84bcebb21022c5ffb3c"`);
        await queryRunner.query(`ALTER TABLE "notificacao" DROP CONSTRAINT "FK_9c8299a8506675f2de0d6eb20e9"`);
        await queryRunner.query(`ALTER TABLE "notificacao" DROP CONSTRAINT "FK_eb15c0e603eabc0cd09149ee50c"`);
        await queryRunner.query(`ALTER TABLE "pagamento" DROP CONSTRAINT "FK_2e58ea8831ba85eb9c87a29135b"`);
        await queryRunner.query(`ALTER TABLE "configuracao" DROP COLUMN "categoria"`);
        await queryRunner.query(`DROP TYPE "public"."configuracao_categoria_enum"`);
        await queryRunner.query(`ALTER TABLE "configuracao" ADD "categoria" character varying NOT NULL DEFAULT 'general'`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" DROP COLUMN "severidade"`);
        await queryRunner.query(`DROP TYPE "public"."estoque_alerta_severidade_enum"`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" ADD "severidade" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" DROP COLUMN "tipo"`);
        await queryRunner.query(`DROP TYPE "public"."estoque_alerta_tipo_enum"`);
        await queryRunner.query(`ALTER TABLE "estoque_alerta" ADD "tipo" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "estoque_item" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."estoque_item_status_enum"`);
        await queryRunner.query(`ALTER TABLE "estoque_item" ADD "status" character varying NOT NULL DEFAULT 'out_of_stock'`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" DROP COLUMN "reason"`);
        await queryRunner.query(`DROP TYPE "public"."estoque_movimentacao_reason_enum"`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" ADD "reason" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" DROP COLUMN "type"`);
        await queryRunner.query(`DROP TYPE "public"."estoque_movimentacao_type_enum"`);
        await queryRunner.query(`ALTER TABLE "estoque_movimentacao" ADD "type" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "notificacao" DROP COLUMN "tipo"`);
        await queryRunner.query(`DROP TYPE "public"."notificacao_tipo_enum"`);
        await queryRunner.query(`ALTER TABLE "notificacao" ADD "tipo" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "pagamento" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."pagamento_status_enum"`);
        await queryRunner.query(`ALTER TABLE "pagamento" ADD "status" character varying NOT NULL DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE "pagamento" DROP COLUMN "metodo"`);
        await queryRunner.query(`DROP TYPE "public"."pagamento_metodo_enum"`);
        await queryRunner.query(`ALTER TABLE "pagamento" ADD "metodo" character varying NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."pedido_status_enum_old" AS ENUM('aguardando_producao', 'pronto', 'entregue')`);
        await queryRunner.query(`ALTER TABLE "pedido" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "pedido" ALTER COLUMN "status" TYPE "public"."pedido_status_enum_old" USING "status"::"text"::"public"."pedido_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "pedido" ALTER COLUMN "status" SET DEFAULT 'aguardando_producao'`);
        await queryRunner.query(`DROP TYPE "public"."pedido_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."pedido_status_enum_old" RENAME TO "pedido_status_enum"`);
        await queryRunner.query(`ALTER TABLE "cliente" ALTER COLUMN "numero" SET DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "categoria"`);
        await queryRunner.query(`DROP TYPE "public"."produto_categoria_enum"`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "categoria" character varying`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP COLUMN "metodoPagamento"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP COLUMN "dataEntrega"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP COLUMN "dataPagamento"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP COLUMN "enderecoEntrega"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP COLUMN "observacoes"`);
        await queryRunner.query(`ALTER TABLE "cliente" DROP COLUMN "dataAtualizacao"`);
        await queryRunner.query(`ALTER TABLE "cliente" DROP COLUMN "dataCriacao"`);
        await queryRunner.query(`ALTER TABLE "cliente" DROP COLUMN "ativo"`);
        await queryRunner.query(`ALTER TABLE "cliente" DROP COLUMN "role"`);
        await queryRunner.query(`DROP TYPE "public"."cliente_role_enum"`);
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "tags"`);
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "imagens"`);
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "estoqueMinimo"`);
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "estoque"`);
        await queryRunner.query(`ALTER TABLE "produto" DROP COLUMN "emoji"`);
        await queryRunner.query(`ALTER TABLE "produto" ADD "imagem" character varying`);
    }

}
